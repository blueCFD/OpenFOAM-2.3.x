#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 2011 OpenFOAM Foundation
#    \\/     M anipulation  |
#-------------------------------------------------------------------------------
# 2014-02-21 blueCAPE Lda: Modifications for blueCFD-Core 2.3
#------------------------------------------------------------------------------
# License
#     This file is a derivative work of OpenFOAM.
#
#     OpenFOAM is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# Modifications
#     This file has been modified by blueCAPE's unofficial mingw patches for
#     OpenFOAM.
#     For more information about these patches, visit:
#         http://bluecfd.com/Core
#
#     Modifications made:
#        - Derived from the patches for blueCFD 2.1 and 2.2.
#        - Added the ability to build localized builds for each MPI toolbox.
#        - Added ability to build the resource files for embedding into the
#          binaries, therefore allowing us to add version information to the
#          binaries for Windows to see.
#
# Script
#     makeDerivedFiles
#
# Description
#     Constructs all the file list for make given the source file list,
#     written by hand or using makeFilesAndOptions.
#
#------------------------------------------------------------------------------

[ -z "$WM_OPTIONS_LOCAL" ] && WM_OPTIONS_LOCAL=$WM_OPTIONS

[ -d "$WM_OPTIONS_LOCAL" ] || {
    echo "The '$WM_OPTIONS_LOCAL' directory does not exist, exiting" 1>&2
    exit 1
}

# change to the $WM_OPTIONS directory
cd "$WM_OPTIONS_LOCAL" 2>/dev/null || {
    echo "Could not change to directory '$WM_OPTIONS_LOCAL'" 1>&2
    exit 1
}

# special preparations for MinGW builds
TIS_MinGW=0
if isMinGW && [ "$makeOption" != "libo" -a "$makeOption" != "lib" ]; then
    if [ -e "$FOAM_SRC/OSspecific/$WM_OSTYPE/res/OFversion_template.rc" ]; then
        TIS_MinGW=1
        cp "$FOAM_SRC/OSspecific/$WM_OSTYPE/res/OFversion_template.rc" tmpver.rc
    fi
fi

if [ $TIS_MinGW -eq 1 ]; then
    #Extract the binary name
    MGW_EXENAME=`grep -e "^EXE =" files`
    MGW_LIBNAME=`grep -e "^LIB =" files`
    MGW_FINALNAME="NONAME"

    if [ -n "$MGW_EXENAME" ]; then
        MGW_FINALNAME=`echo $MGW_EXENAME | sed -e 's=.*/=='`.exe
    fi

    if [ -n "$MGW_LIBNAME" ]; then
        MGW_FINALNAME=`echo $MGW_LIBNAME | sed -e 's=.*/=='`.dll
    fi

    #get current OpenFOAM version
    MGW_OFversion=`wmakePrintBuild -update`

    #apply values to template
    sed -e 's=2\.0\.\0\.0='$MGW_OFversion'=g' \
        -e 's=tmpintname='$MGW_FINALNAME'=' \
        -e 's=tmporigname='$MGW_FINALNAME'=' \
        tmpver.rc > version_of_build.rc

    #clean up
    unset MGW_OFversion MGW_EXENAME MGW_LIBNAME MGW_FINALNAME
    rm tmpver.rc
fi

# Find and keep macro definitions in files list
grep "=" files > filesMacros

# Remove all macro definitions from the files list
grep -v "=" files > filesPlusBlank

# Add a newline to files to ensure the last line is followed by a newline
echo "" >> filesPlusBlank

# Plug in the version resource file for being compiled along
if [ $TIS_MinGW -eq 1 ]; then
    echo "Make/$WM_OPTIONS_LOCAL/version_of_build.rc" >> filesPlusBlank
    echo "" >> filesPlusBlank
fi

# Remove commented lines, blank lines, and trailing blanks from files
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sed -e '/^#/ d'         \
    -e '/^[ \t]*$/ d'   \
    -e 's/[ \t]*$//'    \
    filesPlusBlank > files.$$

rm filesPlusBlank


# make sourceFiles
# ~~~~~~~~~~~~~~~~
echo "SOURCE = " > tmpSourceFile
cat files.$$ >> tmpSourceFile

sed -e 's/$/\\/'    \
    -e '$s/\\//'    \
    tmpSourceFile > sourceFiles

rm tmpSourceFile


# make objectFiles
# ~~~~~~~~~~~~~~~~
sed -e 's%.*/%%'               \
    -e 's%^%$(OBJECTS_DIR)/%'  \
    -e 's%\.[a-zA-Z]*$%\.o%'   \
    files.$$ > tmpObjectFiles

echo "OBJECTS = " > tmpObjectFiles2
cat tmpObjectFiles >> tmpObjectFiles2

sed -e 's/$/\\/'    \
    -e '$s/\\//'    \
    tmpObjectFiles2 > objectFiles

rm tmpObjectFiles tmpObjectFiles2


# make localObjectFiles
# ~~~~~~~~~~~~~~~~~~~~~
sed -e 's%.*/%%'               \
    -e 's%\.[a-zA-Z]*$%\.o%'   \
    files.$$ > tmpLocalObjectFiles

echo "LOCAL_OBJECTS = " > tmpLocalObjectFiles2
cat tmpLocalObjectFiles >> tmpLocalObjectFiles2

sed -e 's/$/\\/'    \
    -e '$s/\\//'    \
    tmpLocalObjectFiles2 > localObjectFiles

rm tmpLocalObjectFiles tmpLocalObjectFiles2


# make dependencyFiles
# ~~~~~~~~~~~~~~~~~~~~
sed 's/\.[a-zA-Z]*$/\.dep/' \
     files.$$ > tmpDependencyFiles

echo "DEPENDENCIES = " > tmpDependencyFiles2
cat tmpDependencyFiles >> tmpDependencyFiles2

sed -e 's/$/\\/'    \
    -e '$s/\\//'    \
    tmpDependencyFiles2 > dependencyFiles

rm tmpDependencyFiles tmpDependencyFiles2


# make includeDeps
# ~~~~~~~~~~~~~~~~
sed -e 's/\.[a-zA-Z]*$/.dep/'   \
    -e 's/^/include /'          \
    files.$$ > includeDeps

rm files.$$

#------------------------------------------------------------------------------
